#!/bin/bash
#Downpac is a simple script to easily downgrade Arch Linux packages

[[ $# -le 0 ]] && echo "Usage: downpac pkg_name" && exit 1

pkg=$1
arch=$(uname -m)
user="$([[ $SUDO_USER ]] && echo $SUDO_USER || echo $USER)"
inst_pkgs=( $(pacman -Qqn) )

#Determine package to be downgraded
counter=0
for ((i=0;i<${#inst_pkgs[@]};i++)); do
	if [[ ${inst_pkgs[$i]} == "$pkg"* ]]; then
		counter=$((counter+1))
		matching_pkgs[${#matching_pkgs[@]}]=${inst_pkgs[$i]}
		echo "$counter ${inst_pkgs[$i]}"
	fi
done
[[ $counter -eq 0 ]] && echo "'$pkg': Not installed package or an AUR package" && exit 1
echo
read -p "Select a package: " sel_pkg
echo "sel_pkg $counter"
[[ $sel_pkg -gt $counter || $sel_pkg -le 0 ]] && echo "Invalid entry" && exit 1

echo "Package selected: ${matching_pkgs[$((sel_pkg-1))]}"
f_letter=${matching_pkgs[$((sel_pkg-1))]:0:1}

#Get available package versions from archive.archlinux.org
cur_ver=$(pacman -Qi ${matching_pkgs[$((sel_pkg-1))]} | grep Version | awk '{print $3}')
avail_pkg_vers=( $(curl -s https://archive.archlinux.org/packages/${f_letter}/${matching_pkgs[$((sel_pkg-1))]}/ | grep "${arch}\|any" | cut -d'"' -f2 | grep "tar.xz"$) )
for (( i=0;i<${#avail_pkg_vers[@]};i++ )); do
	pkg_ver=$(echo "${avail_pkg_vers[$i]}" | rev | cut -d"-" -f2-3 | rev)	
	echo -n "$((i+1)) "
	[[ $pkg_ver == $cur_ver ]] && echo "$pkg_ver [installed]" || echo "$pkg_ver"
done

[[ $i -eq 0 ]] && echo "No packages found" && exit 1 
echo
read -p "Choose a version (current: $cur_ver): " ver
[[ $ver -gt ${#avail_pkg_vers[@]} || $ver -le 0 ]] && echo "Invalid entry" && exit 1
down_ver=$(echo "${avail_pkg_vers[$((ver-1))]}" | rev | cut -d"-" -f2-3 | rev)
if [[ $cur_ver == $down_ver ]]; then
	echo "'${avail_pkg_vers[$((ver-1))]}' already installed" && exit 0
else
	echo "Downgrading ${matching_pkgs[$((sel_pkg-1))]} to version $down_ver"
fi

#Downgrade package
TMP_DIR="/tmp/downgrader"
old_cwd=$PWD
[[ ! -d $TMP_DIR ]] && mkdir -p $TMP_DIR
cd $TMP_DIR
curl -o ${TMP_DIR}/${avail_pkg_vers[$((ver-1))]} https://archive.archlinux.org/packages/${f_letter}/${matching_pkgs[$((sel_pkg-1))]}/${avail_pkg_vers[$((ver-1))]}
[[ $? -ne 0 ]] && exit 1
[[ ! -f ${TMP_DIR}/${avail_pkg_vers[$((ver-1))]} ]] && echo "Error downloading package" && exit 1
sudo -u root pacman -U ${avail_pkg_vers[$((ver-1))]}

#Remove downloaded package
rm ${TMP_DIR}/${avail_pkg_vers[$((ver-1))]}
cd $old_cwd

exit 0
